openapi: 3.0.1
info:
  title: API Description for NuzlockeHelper
  version: "1.0"

servers:
  - url: http://localhost:8080/
    description: Optional dev mode server description

paths:
  /pokemon:
    get:
      operationId: getFilteredPokemon
      parameters:
        - in: query
          name: search
          schema:
            type: string
      responses:
        200:
          description: Returns filtered List of Pokemon
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pokemon'
  /routes:
    get:
      operationId: getFilteredRoutes
      parameters:
        - in: query
          name: search
          schema:
            type: string
      responses:
        200:
          description: Returns filtered List of Runs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Route'

  /runs:
    get:
      operationId: getAllRuns
      responses:
        200:
          description: Returns all Runs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Run'
    post:
      operationId: createRun
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string

      responses:
        201:
          description: Returns the created Run
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Run'

  /runs/{runName}:
    get:
      operationId: getRunByName
      parameters:
        - in: path
          name: runName
          required: true
          schema:
            type: string
      responses:
        200:
          description: Returns the Run by the given Name
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Run'

  /runs/{runId}/encounters:
    post:
      operationId: createEncounter
      parameters:
        - in: path
          name: runId
          required: true
          schema:
            type: string
      responses:
        201:
          description: Returns the created RunRoute
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'

  /runs/{runId}/encounters/{encounterId}:
    put:
      operationId: updateEncounter
      parameters:
        - in: path
          name: runId
          required: true
          schema:
            type: string
        - in: path
          name: encounterId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: UpdateEncounter
              properties:
                routeId:
                  type: string
                inTeam:
                  type: boolean
      responses:
        200:
          description: Returns the updated Encounter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Encounter'

  /runs/{runId}/encounters/{encounterId}/{encounterPokemonId}:
    put:
      operationId: updateEncounterPokemon
      parameters:
        - in: path
          name: runId
          required: true
          schema:
            type: string
        - in: path
          name: encounterId
          required: true
          schema:
            type: string
        - in: path
          name: encounterPokemonId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: UpdateEncounterPokemon
              properties:
                pokemonId:
                  type: string
      responses:
        200:
          description: Returns the updated EncounterPokemon
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncounterPokemon'

components:
  schemas:
    Pokemon:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type1:
          type: string
        type2:
          type: string

    CaughtPokemon:
      type: object
      properties:
        id:
          type: string
        pokemon:
          $ref: '#/components/schemas/Pokemon'
        caughtBy:
          $ref: '#/components/schemas/Account'

    Run:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/Account'
        createdAt:
          type: integer
          format: int64
        encounters:
          type: array
          items:
            $ref: '#/components/schemas/Encounter'

    Encounter:
      type: object
      properties:
        id:
          type: string
        route:
          $ref: '#/components/schemas/Route'
        encounterPokemons:
          type: array
          items:
            $ref: '#/components/schemas/EncounterPokemon'
        inTeam:
          type: boolean
        dead:
          type: boolean

    EncounterPokemon:
      type: object
      properties:
        id:
          type: string
        pokemon:
          $ref: '#/components/schemas/Pokemon'
        caughtBy:
          $ref: '#/components/schemas/Account'

    Route:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        pokemons:
          type: array
          items:
            $ref: '#/components/schemas/CaughtPokemon'

    Account:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
